// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Addresses {
  id        Int      @id @default(autoincrement())
  name      String
  address_1 String
  address_2 String
  city      String
  zipcode   String
  country   String
  user      Users    @relation(fields: [user_id], references: [id])
  user_id   Int      @unique
  orders    Orders[]
}

model AuthTokens {
  id      Int    @id @default(autoincrement())
  user    Users  @relation(fields: [user_id], references: [id])
  user_id Int
  value   String @unique
}

model Users {
  id          Int          @id @default(autoincrement())
  name        String?
  email       String       @unique
  username    String?      @unique
  password    String
  phone       String?
  addresses   Addresses[]
  auth_tokens AuthTokens[]
  orders Orders[]
  cart        Carts?
}

model Carts {
  id       Int         @id @default(autoincrement())
  user     Users       @relation(fields: [user_id], references: [id])
  user_id  Int         @unique
  products CartItems[]
}

model CartItems {
  id         Int      @id @default(autoincrement())
  quantity   Int
  product    Products @relation(fields: [product_id], references: [id])
  product_id Int
  cart       Carts    @relation(fields: [cart_id], references: [id])
  cart_id    Int
}

model Products {
  id                  Int         @id @default(autoincrement())
  title               String
  description         String
  brand               String
  stock               Int
  price               Float
  discount_percentage Float?
  rating              Float?
  category            String? // TODO: make required
  thumbnail           String? // TODO: make required
  images              String? // TODO: make required
  cart_items          CartItems[]
}

model Orders {
  id           Int           @id @default(autoincrement())
  address      Addresses     @relation(fields: [address_id], references: [id])
  address_id   Int
  user      Users     @relation(fields: [user_id], references: [id]) // TODO: remove (can be included when finding in prisma client)
  user_id   Int // TODO: remove
  statuses OrderStatuses[]
  subtotal     Float
  shipping_fee Float
  arrival      DateTime
}

model OrderStatuses {
  id      Int      @id @default(autoincrement())
  type    String
  details String
  order   Orders @relation(fields: [order_id], references: [id])
  order_id Int
}
